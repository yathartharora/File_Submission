{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yathartharora/File_Submission/pages/Subjects/upload.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Submission from '../../Ethereum/submission';\nimport { Link } from '../../routes';\nimport web3 from '../../Ethereum/web3';\nimport Layout from '../../Components/Layout';\nimport ipfs from '../../ipfs';\nimport { Form, Input, Button } from 'semantic-ui-react';\n\nclass Upload extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      console.log(this.props.address);\n      const upload = Submission(this.props.address);\n      this.setState({\n        loading: true,\n        errormessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await upload.methods.submit(this.state.firstname, this.state.lastname, this.state.scholarnumber, this.state.ipfsHash).send({\n          from: accounts[0],\n          gas: '100000'\n        });\n      } catch (error) {\n        this.setState({\n          errormessage: error.Message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    return {\n      address\n    };\n  }\n\n  generate(event) {\n    event.preventDefault();\n    ipfs.files.add(this.state.buffer, (err, res) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      this.setState({\n        ipfsHash: res[0].hash\n      });\n      console.log('ipfsHash: ', this.state.ipfsHash);\n    });\n    this.setState({\n      active: false\n    });\n  }\n\n  captureFile(event) {\n    event.preventDefault();\n    console.log('Capture File...');\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({\n        buffer: Buffer(reader.result)\n      });\n      console.log('buffer ', this.state.buffer);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload your file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: this.state.firstname,\n            onChange: event => this.setState({\n              firstname: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: this.state.lastname,\n            onChange: event => this.setState({\n              lastname: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Scholar Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: this.state.scholarnumber,\n            onChange: event => this.setState({\n              scholarnumber: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            onChange: this.captureFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          loading: this.state.loading,\n          disabled: this.state.active,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        onClick: this.generate,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/Users/yathartharora/File_Submission/pages/Subjects/upload.js"],"names":["React","Component","Submission","Link","web3","Layout","ipfs","Form","Input","Button","Upload","event","preventDefault","console","log","props","address","upload","setState","loading","errormessage","accounts","eth","getAccounts","methods","submit","state","firstname","lastname","scholarnumber","ipfsHash","send","from","gas","error","Message","getInitialProps","query","generate","files","add","buffer","err","res","hash","active","captureFile","file","target","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","render","onSubmit","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Submission from '../../Ethereum/submission';\nimport {Link} from '../../routes';\nimport web3 from '../../Ethereum/web3';\nimport Layout from '../../Components/Layout';\nimport ipfs from '../../ipfs';\nimport { Form, Input, Button } from 'semantic-ui-react';\n\nclass Upload extends Component{\n\n\n    static async getInitialProps(props){\n        const {address} = props.query;\n        \n        \n        return {address};\n    };\n\n    \n\n    onSubmit = async(event) => {\n        event.preventDefault();\n        console.log(this.props.address)\n        const upload = Submission(this.props.address)\n        this.setState({loading:true, errormessage: ''});\n        try {\n            const accounts = await web3.eth.getAccounts();\n\n            await upload.methods.submit(this.state.firstname, this.state.lastname, this.state.scholarnumber, this.state.ipfsHash).send({\n                from: accounts[0],\n                gas: '100000'\n            });\n        } catch (error) {\n            this.setState({errormessage: error.Message});\n        }\n        this.setState({loading: false});\n    }\n\n    generate(event) {\n        event.preventDefault();\n        ipfs.files.add(this.state.buffer, (err, res) => {\n            if(err){\n                console.log(err)\n                return\n            }\n            this.setState({ipfsHash: res[0].hash})\n            console.log('ipfsHash: ', this.state.ipfsHash);\n        })\n        this.setState({active: false});\n    }\n\n    captureFile(event) {\n        event.preventDefault();\n        console.log('Capture File...')\n\n        const file = event.target.files[0];\n        const reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n\n        reader.onloadend = () => {\n            this.setState({buffer: Buffer(reader.result)})\n            console.log('buffer ',this.state.buffer);\n        }\n    }\n\n    render(){\n        return(\n            <Layout>\n                <h3>Upload your file</h3>\n                <Form onSubmit={this.onSubmit}>\n                    <Form.Field>\n                        <label>First Name</label>\n                        <Input \n                         value = {this.state.firstname}\n                         onChange = {event => this.setState({firstname: event.target.value})}\n                        />\n                        <label>Last Name</label>\n                        <Input \n                          value = {this.state.lastname}\n                          onChange = {event => this.setState({lastname: event.target.value})}  \n                        />\n                        <label>Scholar Number</label>\n                        <Input \n                          value = {this.state.scholarnumber}\n                          onChange = {event => this.setState({scholarnumber: event.target.value})}  \n                        />\n                        <label>Upload File</label>\n                        <Input \n                            type='file'\n                            onChange = {this.captureFile}\n                        />\n                    </Form.Field>\n                    <Button primary loading={this.state.loading} disabled={this.state.active}>Submit</Button>  \n                </Form>\n                <Button primary onClick={this.generate}>Generate</Button>\n            </Layout>\n        )\n    }\n}\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}